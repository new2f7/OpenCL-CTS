cmake_minimum_required(VERSION 3.0)

project(OpenCL-CTS C CXX)

find_package(OpenCL REQUIRED)
add_library(opencl_lib INTERFACE)
target_include_directories(opencl_lib INTERFACE ${OpenCL_INCLUDE_DIRS})
target_compile_options(opencl_lib INTERFACE "-std=c++11")
target_link_libraries(opencl_lib INTERFACE ${OpenCL_LIBRARIES})

add_compile_options(-fPIC -Wno-narrowing -fpermissive)

#if(POCL)
#  add_library(pocl SHARED IMPORTED)
#  set_property(TARGET pocl PROPERTY IMPORTED_LOCATION "${POCL}")
#  set(CLConform_LIBRARIES pocl m pthread)
#else()
#  set(CLConform_LIBRARIES m pthread)
#endif()

set(CLConform_LIBRARIES m pthread opencl_lib)

if(ENABLE_ASAN)
  set(CLConform_LIBRARIES "asan" ${CLConform_LIBRARIES})
endif()

if(ENABLE_TSAN)
  set(CLConform_LIBRARIES "tsan" ${CLConform_LIBRARIES})
endif()


add_subdirectory(allocations)
add_subdirectory(api)
add_subdirectory(atomics)
add_subdirectory(basic)
add_subdirectory(buffers)
add_subdirectory(commonfns)
add_subdirectory(compiler)
add_subdirectory(computeinfo)
add_subdirectory(device_partition)
# disabled because it does not build in newer distributions (Arch, Ubuntu 18.04)
# add_subdirectory(gl)
add_subdirectory(conversions)
add_subdirectory(contractions)
add_subdirectory(events)
add_subdirectory(geometrics)
add_subdirectory(half)
add_subdirectory(headers)
add_subdirectory(images)
add_subdirectory(integer_ops)
add_subdirectory(math_brute_force)
add_subdirectory(mem_host_flags)
add_subdirectory(multiple_device_context)
add_subdirectory(printf)
add_subdirectory(profiling)
add_subdirectory(relationals)
add_subdirectory(select)
add_subdirectory(thread_dimensions)
add_subdirectory(vec_align)
add_subdirectory(vec_step)
